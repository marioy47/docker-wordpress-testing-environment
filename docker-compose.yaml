version: '3'

services:

  # MariaDB database
  db:
    image: mariadb
    container_name: wp-tests-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wordpress}
      MYSQL_USER: ${MYSQL_USER:-wordpress}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wordpress}
    volumes:
      - db-data:/var/lib/mysql

  # Redis cache
  cache:
    image: redis:alpine
    container_name: wp-tests-cache

  # MailHog mail catcher
  mail:
    image: mailhog/mailhog
    container_name: wp-tests-mail
    ports:
      - ${MAIL_PORT:-8001}:8025

  # PhpMyAdmin
  pma:
    image: phpmyadmin
    container_name: wp-tests-pma
    environment:
      PMA_HOST: wp-tests-db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_USER: ${MYSQL_USER:-wordpress}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wordpress}
    ports:
      - ${PMA_PORT:-8002}:80

  # WordPress
  wp:
    build:
      context: ./docker/
      args:
        - WORDPRESS_VERSION=${WORDPRESS_VERSION:-php7.4}
    container_name: wp-tests-wp
    environment:
      VIRTUAL_HOST: ${WORDPRESS_HOST:-localhost}
      WORDPRESS_DB_HOST: wp-tests-db
      WORDPRESS_DB_USER: ${MYSQL_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD:-wordpress}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE:-wordpress}
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_DEBUG', true );
        define( 'WP_DEBUG_DISPLAY', false );
        define( 'WP_DEBUG_LOG', '/tmp/wordpress/wordpress.log' );
        define( 'WP_REDIS_HOST', 'wp-tests-cache' );
        define( 'WPMS_ON', true );
        define( 'WPMS_SMTP_HOST', 'wp-tests-mail' );
        define( 'WPMS_SMTP_PORT', 1025 );
        define( 'WPMS_SSL', '' );
        define( 'WPMS_SMTP_AUTH', false );
        define( 'WPMS_SMTP_AUTOTLS', true );
        define( 'WPMS_MAILER', 'smtp' );
    volumes:
      - wp-html:/var/www/html
      - ./docker/msmtprc:/etc/msmtprc
      - ./docker/php-config.ini:/usr/local/etc/php/conf.d/php-config.ini
      - ./docker/msmtp-mailhost-fixer.php:/var/www/html/wp-content/mu-plugins/msmtp-mailhost-fixer.php
      - ./themes:/var/www/html/wp-content/themes
      - ./plugins:/var/www/html/wp-content/plugins
      - ./logs/xdebug:/tmp/xdebug
      - ./logs/wordpress:/tmp/wordpress

  proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: wp-test-proxy
    ports:
      - ${WORDPRESS_PORT:-8000}:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - cert-data:/etc/nginx/certs



  # WordPress installation
  wp-cli:
    image: wordpress:cli-php7.4
    container_name: wp-tests-wp-cli
    environment:
      WORDPRESS_HOST: ${WORDPRESS_HOST:-localhost} # To pass to wp-cli
      WORDPRESS_PORT: ${WORDPRESS_PORT:-8000}
      WORDPRESS_ADMIN_USER: ${WORDPRESS_ADMIN_USER:-admin}
      WORDPRESS_ADMIN_PASS: ${WORDPRESS_ADMIN_PASS:-password}
      WORDPRESS_DB_HOST: wp-tests-db
      WORDPRESS_DB_USER: ${MYSQL_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD:-wordpress}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE:-wordpress}
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_DEGUB_DISPLAY', false );
        define( 'WP_DEBUG_LOG', true );
        define( 'WP_REDIS_HOST', 'wp-tests-cache' );
    volumes_from:
      - wp
    user: xfs
    command:
      - sh
      - -c
      - |
        sleep 10
        wp core install --path=/var/www/html --title=WordPress --admin_user=$${WORDPRESS_ADMIN_USER} --admin_password=$${WORDPRESS_ADMIN_PASS} --admin_email=admin@example.com --skip-email --url="http://$${WORDPRESS_HOST}:$${WORDPRESS_PORT}"
        wp plugin install redis-cache --activate
        wp redis enable
        echo "Go to http://$${WORDPRESS_HOST}:$${WORDPRESS_PORT}/wp-admin/ with User $${WORDPRESS_ADMIN_USER} and password $${WORDPRESS_ADMIN_PASS}"

networks:
  default:
    name: wp-tests-network

volumes:
  db-data:
  wp-html:
  cert-data:

